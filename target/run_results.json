{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.9.0", "generated_at": "2024-12-27T06:12:18.253916Z", "invocation_id": "30588359-e240-4f05-bf8d-74e42feed584", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-27T06:12:18.203918Z", "completed_at": "2024-12-27T06:12:18.210244Z"}, {"name": "execute", "started_at": "2024-12-27T06:12:18.210509Z", "completed_at": "2024-12-27T06:12:18.210523Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007166862487792969, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.postgres.my_first_dbt_model", "compiled": true, "compiled_code": "/*\n    Welcome to your first dbt model!\n    Did you know that you can also configure models directly within SQL files?\n    This will override configurations stated in dbt_project.yml\n\n    Try changing \"table\" to \"view\" below\n*/\n\n\n\nwith source_data as (\n\n    select 1 as id\n    union all\n    select null as id\n\n)\n\nselect *\nfrom source_data\n\n/*\n    Uncomment the line below to remove records with null `id` values\n*/\n\n-- where id is not null", "relation_name": "\"DBT_DEMO\".\"STAGING\".\"my_first_dbt_model\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-27T06:12:18.211736Z", "completed_at": "2024-12-27T06:12:18.217493Z"}, {"name": "execute", "started_at": "2024-12-27T06:12:18.217743Z", "completed_at": "2024-12-27T06:12:18.217749Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006591081619262695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.postgres.stg_dbtdata", "compiled": true, "compiled_code": "\n\n-- Source data to process\nWITH source_data AS (\n    SELECT * \n    FROM \"DBT_DEMO\".\"STAGING\".\"dbt_data\"\n)\n\n-- Main query for incremental load\nSELECT id,name,amount,updated_at\nFROM source_data\n\n-- Add a filter for incremental runs\n\nWHERE updated_at > (SELECT MAX(updated_at) FROM \"DBT_DEMO\".\"STAGING\".\"stg_dbtdata\")\n", "relation_name": "\"DBT_DEMO\".\"STAGING\".\"stg_dbtdata\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-27T06:12:18.218787Z", "completed_at": "2024-12-27T06:12:18.221584Z"}, {"name": "execute", "started_at": "2024-12-27T06:12:18.221832Z", "completed_at": "2024-12-27T06:12:18.221837Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0035409927368164062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.postgres.stg_employee", "compiled": true, "compiled_code": "with source_data as (\n    select * from \"DBT_DEMO\".\"STAGING\".\"employee\"\n)\n\nSELECT \n    \"EmployeeID\",\n    \"FirstName\",\n    \"LastName\",\n    CONCAT(\"FirstName\",' ',\"LastName\") AS \"EmployeeName\",\n    \"Department\",\n    \"Salary\",\n    \"DateOfJoining\",\n    -- Calculate SalaryCategory\n    CASE\n        WHEN \"Salary\" < 60000 THEN 'Low'\n        WHEN \"Salary\" BETWEEN 60000 AND 79999 THEN 'Medium'\n        WHEN \"Salary\" >= 80000 THEN 'High'\n    END AS SalaryCategory,\n    -- Calculate YearsInCompany\n    DATE_PART('year', AGE(\"DateOfJoining\"::date)) AS YearsInCompany\nFROM source_data", "relation_name": "\"DBT_DEMO\".\"STAGING\".\"stg_employee\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-27T06:12:18.222857Z", "completed_at": "2024-12-27T06:12:18.224850Z"}, {"name": "execute", "started_at": "2024-12-27T06:12:18.225133Z", "completed_at": "2024-12-27T06:12:18.225138Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0027709007263183594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.postgres.stg_test", "compiled": true, "compiled_code": "with source_data as (\n\n    select * from \"DBT_DEMO\".\"STAGING\".\"test1\"\n\n)\n\nSELECT \n  id,\n  name,\n  age,\n  (metadata::json->'address'->>'city') AS city,\n  (metadata::json->'address'->>'zip') AS zip,\n  pref.value AS preference,\n  CONCAT(id,'_',pref.value) as unique_key\nFROM \n  source_data,\n  LATERAL json_array_elements_text(metadata::json->'preferences') AS pref(value)", "relation_name": "\"DBT_DEMO\".\"STAGING\".\"stg_test\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-27T06:12:18.226223Z", "completed_at": "2024-12-27T06:12:18.228238Z"}, {"name": "execute", "started_at": "2024-12-27T06:12:18.228447Z", "completed_at": "2024-12-27T06:12:18.228452Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.002742767333984375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.postgres.my_second_dbt_model", "compiled": true, "compiled_code": "-- Use the `ref` function to select from other models\n\nselect *\nfrom \"DBT_DEMO\".\"STAGING\".\"my_first_dbt_model\"\nwhere id = 1", "relation_name": "\"DBT_DEMO\".\"STAGING\".\"my_second_dbt_model\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-27T06:12:18.229618Z", "completed_at": "2024-12-27T06:12:18.236713Z"}, {"name": "execute", "started_at": "2024-12-27T06:12:18.236964Z", "completed_at": "2024-12-27T06:12:18.236969Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007925987243652344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.postgres.not_null_my_first_dbt_model_id.5fb22c2710", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"DBT_DEMO\".\"STAGING\".\"my_first_dbt_model\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-27T06:12:18.238026Z", "completed_at": "2024-12-27T06:12:18.242740Z"}, {"name": "execute", "started_at": "2024-12-27T06:12:18.242993Z", "completed_at": "2024-12-27T06:12:18.242998Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005491971969604492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.postgres.unique_my_first_dbt_model_id.16e066b321", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"DBT_DEMO\".\"STAGING\".\"my_first_dbt_model\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-27T06:12:18.244386Z", "completed_at": "2024-12-27T06:12:18.248235Z"}, {"name": "execute", "started_at": "2024-12-27T06:12:18.248531Z", "completed_at": "2024-12-27T06:12:18.248536Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0050008296966552734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.postgres.not_null_my_second_dbt_model_id.151b76d778", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"DBT_DEMO\".\"STAGING\".\"my_second_dbt_model\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-27T06:12:18.249655Z", "completed_at": "2024-12-27T06:12:18.252621Z"}, {"name": "execute", "started_at": "2024-12-27T06:12:18.252856Z", "completed_at": "2024-12-27T06:12:18.252861Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.003735065460205078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.postgres.unique_my_second_dbt_model_id.57a0f8c493", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"DBT_DEMO\".\"STAGING\".\"my_second_dbt_model\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}], "elapsed_time": 0.3269078731536865, "args": {"introspect": true, "vars": {}, "select": [], "show_resource_report": false, "which": "generate", "project_dir": "/Users/nmahendra/Documents/DBT/postgres", "exclude": [], "log_level": "info", "log_path": "/Users/nmahendra/Documents/DBT/postgres/logs", "print": true, "indirect_selection": "eager", "require_batched_execution_for_custom_microbatch_strategy": false, "empty_catalog": false, "profiles_dir": "/Users/nmahendra/.dbt", "require_explicit_package_overrides_for_builtin_materializations": true, "send_anonymous_usage_stats": true, "state_modified_compare_vars": false, "write_json": true, "cache_selected_only": false, "use_colors": true, "compile": true, "favor_state": false, "macro_debugging": false, "source_freshness_run_project_hooks": false, "populate_cache": true, "quiet": false, "defer": false, "require_nested_cumulative_type_params": false, "skip_nodes_if_on_run_start_fails": false, "strict_mode": false, "require_yaml_configuration_for_mf_time_spines": false, "use_colors_file": true, "version_check": true, "partial_parse_file_diff": true, "warn_error_options": {"include": [], "exclude": []}, "printer_width": 80, "log_level_file": "debug", "require_resource_names_without_spaces": false, "static": false, "log_format": "default", "partial_parse": true, "static_parser": true, "state_modified_compare_more_unrendered_values": false, "log_file_max_bytes": 10485760, "invocation_command": "dbt docs generate", "log_format_file": "debug"}}